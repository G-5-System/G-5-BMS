@model G_5_BMS.Models.ID
@{
    ViewData["Title"] = "Identification Card";
    ViewData["ShowSecondNavbar"] = true;
}
<link rel="stylesheet" href="~/css/ID.css" asp-append-version="true" />
<link rel="stylesheet" href="~/css/FModal.css" asp-append-version="true" /> <!-- Added FModal for modal styling -->

<div class="container mt-3">
    <div class="custom-card">
        @using (Html.BeginForm("IdentificationCard", "Home", FormMethod.Post, new { id = "Form" }))
        {
            <div class="services-section">
                <hr class="divider">
                <span class="services-label">User Information</span>
            </div>
            <div class="card-body">
                <div class="row mb-3">
                    <div class="col">
                        @Html.LabelFor(m => m.FirstName)
                        @Html.TextBoxFor(m => m.FirstName, new { @class = "form-control", type = "text" })
                        @Html.ValidationMessageFor(m => m.FirstName, "", new { @class = "text-danger" })
                    </div>
                    <div class="col">
                        @Html.LabelFor(m => m.MiddleName)
                        @Html.TextBoxFor(m => m.MiddleName, new { @class = "form-control", type = "text" })
                        @Html.ValidationMessageFor(m => m.MiddleName, "", new { @class = "text-danger" })
                    </div>
                    <div class="col">
                        @Html.LabelFor(m => m.LastName)
                        @Html.TextBoxFor(m => m.LastName, new { @class = "form-control", type = "text" })
                        @Html.ValidationMessageFor(m => m.LastName, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="row mb-3">
                    <div class="col">
                        @Html.LabelFor(m => m.Suffix)
                        @Html.DropDownListFor(m => m.Suffix, new SelectList(new List<string> { "N/A", "Jr.", "Sr.", "I", "II" }), "Select Suffix", new { @class = "form-control" })
                        @Html.ValidationMessageFor(m => m.Suffix, "", new { @class = "text-danger" })
                    </div>
                    <div class="col">
                        @Html.LabelFor(m => m.Gender)
                        @Html.DropDownListFor(m => m.Gender, new SelectList(new List<string> { "Male", "Female", "Other" }), "Select Gender", new { @class = "form-control" })
                        @Html.ValidationMessageFor(m => m.Gender, "", new { @class = "text-danger" })
                    </div>
                    <div class="col">
                        @Html.LabelFor(m => m.CivilStatus)
                        @Html.DropDownListFor(m => m.CivilStatus, new SelectList(new List<string> { "Single", "Married", "Divorced", "Widowed" }), "Select Civil Status", new { @class = "form-control" })
                        @Html.ValidationMessageFor(m => m.CivilStatus, "", new { @class = "text-danger" })
                    </div>
                    <div class="col">
                        @Html.LabelFor(m => m.Citizenship)
                        @Html.DropDownListFor(m => m.Citizenship, new SelectList(new List<string> { "Filipino", "American", "Other" }), "Select Citizenship", new { @class = "form-control" })
                        @Html.ValidationMessageFor(m => m.Citizenship, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="row mb-3">
                    <div class="col">
                        @Html.LabelFor(m => m.Birthday)
                        @Html.TextBoxFor(m => m.Birthday, "{0:yyyy-MM-dd}", new { @class = "form-control", type = "date" })
                        @Html.ValidationMessageFor(m => m.Birthday, "", new { @class = "text-danger" })
                    </div>
                    <div class="col">
                        @Html.LabelFor(m => m.Age)
                        @Html.TextBoxFor(m => m.Age, new { @class = "form-control", type = "number", @min = "0" })
                        @Html.ValidationMessageFor(m => m.Age, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>

            <div class="services-section">
                <hr class="divider">
                <span class="services-label">Contact Information</span>
            </div>
            <div class="card-body">
                <div class="row mb-3">
                    <div class="col">
                        @Html.LabelFor(m => m.Address)
                        @Html.TextBoxFor(m => m.Address, new { @class = "form-control", type = "text" })
                        @Html.ValidationMessageFor(m => m.Address, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="row mb-3">
                    <div class="col">
                        @Html.LabelFor(m => m.Province)
                        @Html.TextBoxFor(m => m.Province, new { @class = "form-control", type = "text" })
                        @Html.ValidationMessageFor(m => m.Province, "", new { @class = "text-danger" })
                    </div>
                    <div class="col">
                        @Html.LabelFor(m => m.Municipality)
                        @Html.TextBoxFor(m => m.Municipality, new { @class = "form-control", type = "text" })
                        @Html.ValidationMessageFor(m => m.Municipality, "", new { @class = "text-danger" })
                    </div>
                    <div class="col">
                        @Html.LabelFor(m => m.Barangay)
                        @Html.TextBoxFor(m => m.Barangay, new { @class = "form-control", type = "text" })
                        @Html.ValidationMessageFor(m => m.Barangay, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="row mb-3">
                    <div class="col">
                        @Html.LabelFor(m => m.ContactNumber)
                        @Html.TextBoxFor(m => m.ContactNumber, new { @class = "form-control", type = "tel" })
                        @Html.ValidationMessageFor(m => m.ContactNumber, "", new { @class = "text-danger" })
                    </div>
                    <div class="col">
                        @Html.LabelFor(m => m.EmailAddress)
                        @Html.TextBoxFor(m => m.EmailAddress, new { @class = "form-control", type = "email" })
                        @Html.ValidationMessageFor(m => m.EmailAddress, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="text-end">
                    <button type="submit" class="btn btn-primary">Submit</button>
                </div>
            </div>
        }
    </div>
</div>

<div id="submissionModal" class="custom-modal" style="display:none;">
    <div class="modal-content">
        <span class="close" id="closeModal">&times;</span>
        <p id="modalMessage"></p>
    </div>
</div>
<div id="confirmationModal" style="display: none;">
    <div class="modal-content">
        <span id="closeConfirmation" class="close">&times;</span> 
        <p id="confirmationMessage"></p>
        <button id="confirmButton">Confirm</button>
        <button id="cancelButton">Cancel</button>
    </div>
</div>
<script src="~/lib/jquery/dist/jquery.min.js"></script>
<script src="~/lib/bootstrap/dist/js/bootstrap.bundle.min.js"></script>
<script src="~/js/FormValidation.js" defer></script>
